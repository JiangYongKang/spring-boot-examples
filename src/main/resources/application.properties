# 设置日志输出级别为 DEBUG
debug=false
# 设置日志文件，可以是绝对路径，也可以是相对路径。
# 如果只配置 logging.file，会在项目的当前路径下生成一个 xxx.log 日志文件。
logging.file=spring-boot-learn.log
# 设置目录，会在该目录下创建 spring.log 文件，并写入日志内容。
# 如果只配置 logging.path，在 /var/log 文件夹生成一个日志文件为 spring.log
# logging.path=/var/log
# 二者不能同时使用，如若同时使用，则只有 logging.file 生效
# 默认情况下，日志文件的大小达到 10MB 时会切分一次，产生新的日志文件，默认级别为：ERROR、WARN、INFO
# com.pers.vincent.springboot 包下的日志以 DEBUG 的级别输出
logging.level.com.pers.vincent.springboot=debug
# root 日志以 WARN 级别输出
logging.level.root=warn

# 数据库连接
spring.datasource.url=jdbc:mysql://localhost:3306/springboot-learn
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# spring jpa 配置
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# REDIS 缓存
spring.cache.type=redis
spring.cache.cache-names[0]=system:user

# 连接池配置
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=
# 最大连接数
spring.redis.pool.max-active=8
# 最大空闲连接数
spring.redis.pool.max-idle=8
# 最小空闲连接数
spring.redis.pool.min-idle=0
# 最大等待时间
spring.redis.pool.max-wait=-1

# application.properties 支持自定义属性，可以吧一些常量定义在这
# 在使用的地方通过注解使用，如：@Value(value = "${config.name}")
com.pers.create=idea
com.pers.user=vincent
com.pers.date=2017-04-08
com.pers.version=0.0.1

# 生成一些随机数
com.pers.secret=${random.value}
com.pers.number=${random.int}
com.pers.bignumber=${random.long}
com.pers.uuid=${random.uuid}

# Thymeleaf 模板解析属性
# 开启模板缓存（默认值：true）
spring.thymeleaf.cache=true 
# Check that the template exists before rendering it.
spring.thymeleaf.check-template=true 
# 检查模板位置是否正确（默认值:true）
spring.thymeleaf.check-template-location=true
# Content-Type 的值（默认值：text/html）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值：true）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
# Thymeleaf 模板解析器在解析器链中的顺序。默认情况下，它排第一位。
# 顺序从1开始，只有在定义了额外的 TemplateResolver Bean 时才需要设置这个属性。
# spring.thymeleaf.template-resolver-order=
# 可解析的视图名称列表，用逗号分隔
# spring.thymeleaf.view-names=
# 要被排除在解析之外的视图名称列表，用逗号分隔
# spring.thymeleaf.excluded-view-names=

# 静态资源路径配置，以下均采用默认值
# 优先级顺序为 META-INF/resources > resources > static > public
# 假设修改为 /vincent/**, 那么运行时需要访问 http://127.0.0.1:8080/vincent/index.html 才可以访问到资源
spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
